{\rtf1\ansi\ansicpg1252\cocoartf1038\cocoasubrtf290
{\fonttbl\f0\froman\fcharset0 Times-Roman;\f1\fmodern\fcharset0 Courier;\f2\fnil\fcharset0 LucidaGrande;
}
{\colortbl;\red255\green255\blue255;\red0\green20\blue237;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid302\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid4}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}}
\margl1440\margr1440\margb1800\margt1800\vieww26980\viewh14440\viewkind0
\deftab720
\pard\pardeftab720\sa320\ql\qnatural

\f0\b\fs48 \cf0 OVERVIEW{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#OVERVIEW"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\b0\fs24 \cf0 Welcome to REsync, the bare bones get-you-your-data-quickly RETS client from the Center for REALTOR Technology. REsync consists of 3 command-line programs that use YAML configuration files to conntect to a RETS server. The {\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#METADATA"}}{\fldrslt \cf2 \ul \ulc2 metadata}} program is a simple RETS metadata browser, while {\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#RETS_DATA_FETCH"}}{\fldrslt \cf2 \ul \ulc2 rets_data_fetch}} is the program that will pull the data from the RETS server. Finally the {\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#OBJECT_FETCH"}}{\fldrslt \cf2 \ul \ulc2 object_fetch}} program pulls the object data like photos for the items downloaded in a data fetch.\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs36 \cf0 FEATURES{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#FEATURES"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls1\ilvl0
\b0\fs24 \cf0 {\listtext	\'95	}Simple Setup, one YAML configuration file is all you need.\
{\listtext	\'95	}Can be run from a scheduler or a cron job\
{\listtext	\'95	}Output in CSV. This means you can use the many CSV to database mappers out there to get you data into your database easily.\
{\listtext	\'95	}Column headers can be either the RETS System Name or user defined.\
{\listtext	\'95	}Delta queries. REsync supports date based delta queries.\
{\listtext	\'95	}Object download tool. Can pull objects like photos from the RETS server.\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs36 \cf0 REQUIREMENTS{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#REQUIREMENTS"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\b0\fs24 \cf0 The binary releases are built using 
\i rubyscript2exe
\i0  and contain all the supporting libraries you need and should run out of the box with no dependencies. Right now there are binary builds to Win32, Mac OSX (darwin) and Linux.\
The source release contains all the ruby files you need to run the scripts in ruby\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls2\ilvl0\cf0 {\listtext	\'95	}rets_helper.rb\
{\listtext	\'95	}progressbar.rb\
{\listtext	\'95	}metadata.rb\
{\listtext	\'95	}rets_data_fetch.rb\
{\listtext	\'95	}object_fetch.rb\
{\listtext	\'95	}zip library\
\pard\pardeftab720\sa240\ql\qnatural
\cf0 You will need to have {\field{\*\fldinst{HYPERLINK "http://www.ruby-lang.org/"}}{\fldrslt \cf2 \ul \ulc2 Ruby}} and {\field{\*\fldinst{HYPERLINK "http://www.crt.realtors.org/projects/rets/librets/"}}{\fldrslt \cf2 \ul \ulc2 libRETS}}, with the Ruby bindings, installed to run these scripts.\
Some familiarity with {\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual"}}{\fldrslt \cf2 \ul \ulc2 http://www.rets.org RETS}} is suggested. In particular you should understand the concepts of Resource, Class, Lookup and System Names as well as how to build a simple DMQL query. If you indeed to use {\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#OBJECT_FETCH"}}{\fldrslt \cf2 \ul \ulc2 object_fetch}} you should understand how Get Object requests work. If you need help in these areas, please go to the forums at {\field{\*\fldinst{HYPERLINK "http://www.rets.org/"}}{\fldrslt \cf2 \ul \ulc2 http://www.rets.org}}. Also available is the {\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-doozer/"}}{\fldrslt \cf2 \ul \ulc2 Doozer DMQL Query Builder}} which can be used to help build your DMQL queries.\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs36 \cf0 Component Programs{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#Component_Programs"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa280\ql\qnatural

\fs28 \cf0 METADATA{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#METADATA"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\b0\fs24 \cf0 This program allows you to browse the metadata on a defined server. This program will always display the following information\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 System ID: <System ID>\
Description: <Description>\
Comment: <Comment>\
\pard\pardeftab720\sa300\ql\qnatural

\f0\b \cf0 Usage{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#Usage"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\f1\b0 \cf0 metadata <configuration_yaml_file>
\f0 \
Lists all of the Resources available.\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 Resources:\
- <System Name> (<StandardName, <Visible Name>)\
\pard\pardeftab720\sa120\ql\qnatural

\f0 \cf0 \
\pard\pardeftab720\sa240\ql\qnatural

\f1 \cf0 metadata <configuration_yaml_file> <Resource System Name>
\f0 \
Lists all of the Classes for the given Resource\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 Classes for <Resource>:\
- <System Name> (<StandardName, <Visible Name>)\
\pard\pardeftab720\sa120\ql\qnatural

\f0 \cf0 \
\pard\pardeftab720\sa240\ql\qnatural

\f1 \cf0 metadata <configuration_yaml_file> <Resource System Name> <Class System Name>
\f0 \
Lists all of the Tables for the given Resource and Class\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 Tables for <Resource>-<Class>:\
- <System Name> (<Standard Name> <Short Name> (<Long Name>)) - Required: <Required Number>\
\pard\pardeftab720\sa120\ql\qnatural

\f0 \cf0 \
\pard\pardeftab720\sa240\ql\qnatural

\f1 \cf0 metadata <configuration_yaml_file> <Resource System Name> LOOKUPS
\f0 \
Lists all of the Lookups for the given Resource\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 Lookups for <Resource>: \
- <System Name>(<Standard Name>)\
\pard\pardeftab720\sa120\ql\qnatural

\f0 \cf0 \
\pard\pardeftab720\sa240\ql\qnatural

\f1 \cf0 metadata <configuration_yaml_file> <Resource System Name> LOOKUPS <Lookup System Name>
\f0 \
Lists all of the Lookup Values for the given Resource and Lookup\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 Lookup Types for <Resource>-<Lookup>(<Lookup Standard Name>):\
\
Lookup value: <Value> (<Short Value>, <Long Value>)\
\pard\pardeftab720\sa280\ql\qnatural

\f0\b\fs28 \cf0 RETS_DATA_FETCH{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#RETS_DATA_FETCH"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\b0\fs24 \cf0 This program allows you to pull data from a RETS server defined in a config file using the query information also defined there. Date parameters may be passed to the query allowing you to make delta queries.\
\pard\pardeftab720\sa300\ql\qnatural

\b \cf0 Usage{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#Usage"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\f1\b0 \cf0 rets_data_fetch <config file>
\f0  Pulls the data from the RETS server. If the query allows for start and stop date parameters it uses the first and last day of the prior month those parameters\
\pard\pardeftab720\sa120\ql\qnatural
\cf0 \
\pard\pardeftab720\sa240\ql\qnatural

\f1 \cf0 rets_data_fetch <config file> <month in YYYY-MM format>
\f0 \
Pulls the data from the RETS server. If the query allows for start and stop date parameters it uses the first and last day of the given month to as those parameters\
\pard\pardeftab720\sa120\ql\qnatural
\cf0 \
\pard\pardeftab720\sa240\ql\qnatural

\f1 \cf0 rets_data_fetch <config file> <month in YYYY-MM format> <month in YYYY-MM format>
\f0 \
Pulls the data from the RETS server. If the query allows for start and stop date parameters it uses the first day of the first month and last day of the second month to as those parameters\
\pard\pardeftab720\sa300\ql\qnatural

\b \cf0 Output{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#Output"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls3\ilvl0
\b0 \cf0 {\listtext	\'95	}All output is to standard out.\
{\listtext	\'95	}Format is of CSV file\
{\listtext	\'95	}Redirect output to save to file.\
\pard\pardeftab720\sa240\ql\qnatural
\cf0 Standard error will display progress information.\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 \'a0 \'a0 \'a0 \'a0 Fetching X of Y items\
Progress: \'a0 \'a0 \'a0100% |oooooooooooooooooooooooooooooooooooooooooo| ETA: \'a000:00:00\
Done!\
\pard\pardeftab720\sa280\ql\qnatural

\f0\b\fs28 \cf0 OBJECT_FETCH{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#OBJECT_FETCH"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\b0\fs24 \cf0 This program will perform get object requests based on the data in the config file as well as data inside the the CSV output of a prior {\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#RETS_DATA_FETCH"}}{\fldrslt \cf2 \ul \ulc2 rets_data_fetch}} request.\
\pard\pardeftab720\sa300\ql\qnatural

\b \cf0 Usage{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#Usage"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\f1\b0 \cf0 object_fetch <config file> <CSV file from prior rets_data_fetch>
\f0 \
Performs the get object request. item_id field in the config file will identify the column in the CSV file that contains the item ids for the request.\
\pard\pardeftab720\sa300\ql\qnatural

\b \cf0 Output{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#Output"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\b0 \cf0 For each object type defined in the config file, a zip file called <object type>.zip will be created. In this zip file is a directory for each item id, and in that directory is all the objects of that type for the item.\
Standard error will display the following progress information\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 Zipping <Object Type> to <Object Type>.zip\
Progress: \'a0 \'a0 \'a0100% |oooooooooooooooooooooooooooooooooooooooooo| ETA: \'a000:00:00\
Done zipping <Object Type>.zip\
DONE!\
\pard\pardeftab720\sa280\ql\qnatural

\f0\b\fs36 \cf0 CONFIGURATION{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#CONFIGURATION"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\b0\fs24 \cf0 The configuration file is used by all components to connect to and query the RETS server. It is a YAML file using the following layout.\
\pard\pardeftab720\ql\qnatural

\f1 \cf0 #Stuff used by everyone\
:rets_info: \
\'a0 :url: http://demo.crt.realtors.org:6103/rets/login\
\'a0 :username: Joe\
\'a0 :password: Schmoe\
\'a0 #:user_agent: CRT-Data-Fetch/1.0\
\'a0 #:user_agent_password: yourUserAgentPassword\
\'a0 #:user_agent_auth_interealty: yes\
\'a0 :rets_version: 1.7.2\
\'a0 :log_file: yourlogfile.log\
\'a0 \
#Stuff needed for rets_data_fetch \
:resource: Property\
:class: RES\
#:limit: 100000\
:select:\
\'a0 \'a0 - ListingID: ID\
\'a0 \'a0 - ListDate: Listing Date\
\'a0 \'a0 - ClosePrice: Final Sale Price\
\'a0 \'a0 - ListPrice\
:dmql: ((ListPrice=0+), ((ListDate=<<start>>-)| (ListDate=<<end>>-)))\
\
#Stuff used by object_fetch\
:item_id: ID\
:object_types:\
\'a0 \'a0 - Photo\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls4\ilvl0
\f0\b \cf0 {\listtext	\'95	}Rets Info Section: 
\i :rets_info:
\i0\b0 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\ql\qnatural
\ls4\ilvl1
\i \cf0 {\listtext	
\f2\i0 \uc0\u9702 
\f0\i 	}:url:
\i0  the URL of the RETS server\
\ls4\ilvl1
\i {\listtext	
\f2\i0 \uc0\u9702 
\f0\i 	}:username:
\i0  the username to access the RETS server\
\ls4\ilvl1
\i {\listtext	
\f2\i0 \uc0\u9702 
\f0\i 	}:password:
\i0  the password for the user to access the RETS server\
\ls4\ilvl1
\i {\listtext	
\f2\i0 \uc0\u9702 
\f0\i 	}:user_agent:
\i0  optional parameter that some RETS servers require for access\
\ls4\ilvl1
\i {\listtext	
\f2\i0 \uc0\u9702 
\f0\i 	}:user_agent_password:
\i0  optional parameter that some RETS servers require for access, only sent if 
\i :user_agent:
\i0  is also sent.\
\ls4\ilvl1
\i {\listtext	
\f2\i0 \uc0\u9702 
\f0\i 	}:user_agent_auth_interealty:
\i0  optional parameter that says to use the modified version of UA Auth supported by Interealty. Defaults to no.\
\ls4\ilvl1
\i {\listtext	
\f2\i0 \uc0\u9702 
\f0\i 	}:rets_version:
\i0  optional parameter to define the RETS version to use. Allowed values: 1.5, 1.7 and 1.7.2. Defaults to 1.5.\
\ls4\ilvl1
\i {\listtext	
\f2\i0 \uc0\u9702 
\f0\i 	}:log_file:
\i0  where the details of the RETS interactions will be logged to. Optional and no logging is done if this parameter is not present.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\ql\qnatural
\ls4\ilvl0
\b \cf0 {\listtext	\'95	}Resource: 
\i :resource:
\i0\b0  The system name of the resource you are pulling data from\
\ls4\ilvl0
\b {\listtext	\'95	}Class: 
\i :class:
\i0\b0  The system name of the class your are pulling data from\
\ls4\ilvl0
\b {\listtext	\'95	}Limit: 
\i :limit:
\i0\b0  An optional parameter that can be used to pull a subset of the data requested. Useful when constructing the query, it will allow you to not pull large data sets while at the same time seeing how many items matched your query since the output will tell you that it is pulling 
\f1 <limit> of X items
\f0  where X is the total number of items that matched the query.\
\ls4\ilvl0
\b {\listtext	\'95	}Select Section: 
\i :select:
\i0\b0  This is an array of the system names of the table (fields) you wish to pull from the resource and class. If you just have the system name the column for that field will be the system name. However if you use the format of 
\f1 <SystemName>: <Mapping Name>
\f0  the column header for that field will be the mapping name.\
\ls4\ilvl0
\b {\listtext	\'95	}DMQL Section: 
\i :dmql:
\i0\b0  The DQML query that controls what data is pulled from the RETS server. The parameters of 
\f1 <<start>>
\f0  and 
\f1 <<end>>
\f0  will be set based on the date parameters passed in, {\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#RETS_DATA_FETCH"}}{\fldrslt \cf2 \ul \ulc2 rets_data_fetch}} talks about start and stop dates\
\ls4\ilvl0
\b {\listtext	\'95	}Item ID: 
\i :item_id:
\i0\b0  The id in the list of selected fields that uniquely identifies an object. This is used by {\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#OBJECT_FETCH"}}{\fldrslt \cf2 \ul \ulc2 object_fetch}} to make it's get object requests.\
\ls4\ilvl0
\b {\listtext	\'95	}Object Types: 
\i :object_types:
\i0\b0  A list of the types of objects you wish to run GetObject{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/w/edit/GetObject"}}{\fldrslt \cf2 \ul \ulc2 ?}} requests for. For each type a zipfile with the name 
\f1 <object type>.zip
\f0  will be created.\
\pard\pardeftab720\sa240\ql\qnatural
\cf0 Take a look at example_config.yaml to get started. The file is configured to connect to the demo RETS server.\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs36 \cf0 LOGGING{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#LOGGING"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\b0\fs24 \cf0 If you are having trouble, turn on logging by defining the logfile rets_info parameter in the configuration file as discussed above. This will give wealth of information about what libRETS is doing to communicate with the RETS server.\
\pard\pardeftab720\sa280\ql\qnatural

\b\fs36 \cf0 SUPPORT{\field{\*\fldinst{HYPERLINK "http://code.google.com/p/crt-resync/wiki/UserManual#SUPPORT"}}{\fldrslt \cf2 \ul \ulc2 \'b6}}\
\pard\pardeftab720\sa240\ql\qnatural

\b0\fs24 \cf0 If you need help, check out the discussion group for {\field{\*\fldinst{HYPERLINK "http://groups.google.com/group/crt-resync-discuss"}}{\fldrslt \cf2 \ul \ulc2 REsync}}. Help with RETS can be obtained on at {\field{\*\fldinst{HYPERLINK "http://www.rets.org/"}}{\fldrslt \cf2 \ul \ulc2 http://www.rets.org}}.\
}